// source: imagegen.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

goog.exportSymbol('image_generation_snet_image_generation.Image', null, global);
goog.exportSymbol('image_generation_snet_image_generation.Text', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
image_generation_snet_image_generation.Text = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(image_generation_snet_image_generation.Text, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  image_generation_snet_image_generation.Text.displayName = 'image_generation_snet_image_generation.Text';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
image_generation_snet_image_generation.Image = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(image_generation_snet_image_generation.Image, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  image_generation_snet_image_generation.Image.displayName = 'image_generation_snet_image_generation.Image';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
image_generation_snet_image_generation.Text.prototype.toObject = function(opt_includeInstance) {
  return image_generation_snet_image_generation.Text.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!image_generation_snet_image_generation.Text} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
image_generation_snet_image_generation.Text.toObject = function(includeInstance, msg) {
  var f, obj = {
    sentence: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dalle: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    beksinski: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    guohua: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    waifu: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    seedval: jspb.Message.getFieldWithDefault(msg, 6, 0),
    nImages: jspb.Message.getFieldWithDefault(msg, 7, 0),
    steps: jspb.Message.getFieldWithDefault(msg, 8, 0),
    h: jspb.Message.getFieldWithDefault(msg, 9, 0),
    w: jspb.Message.getFieldWithDefault(msg, 10, 0),
    promptStyle: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!image_generation_snet_image_generation.Text}
 */
image_generation_snet_image_generation.Text.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new image_generation_snet_image_generation.Text;
  return image_generation_snet_image_generation.Text.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!image_generation_snet_image_generation.Text} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!image_generation_snet_image_generation.Text}
 */
image_generation_snet_image_generation.Text.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSentence(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDalle(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBeksinski(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGuohua(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setWaifu(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSeedval(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNImages(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSteps(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setH(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setW(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPromptStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
image_generation_snet_image_generation.Text.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  image_generation_snet_image_generation.Text.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!image_generation_snet_image_generation.Text} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
image_generation_snet_image_generation.Text.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSentence();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDalle();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getBeksinski();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getGuohua();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getWaifu();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSeedval();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getNImages();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getSteps();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getH();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getW();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPromptStyle();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string sentence = 1;
 * @return {string}
 */
image_generation_snet_image_generation.Text.prototype.getSentence = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setSentence = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool dalle = 2;
 * @return {boolean}
 */
image_generation_snet_image_generation.Text.prototype.getDalle = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setDalle = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool beksinski = 3;
 * @return {boolean}
 */
image_generation_snet_image_generation.Text.prototype.getBeksinski = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setBeksinski = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool guohua = 4;
 * @return {boolean}
 */
image_generation_snet_image_generation.Text.prototype.getGuohua = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setGuohua = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool waifu = 5;
 * @return {boolean}
 */
image_generation_snet_image_generation.Text.prototype.getWaifu = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setWaifu = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional int32 seedVal = 6;
 * @return {number}
 */
image_generation_snet_image_generation.Text.prototype.getSeedval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setSeedval = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 n_images = 7;
 * @return {number}
 */
image_generation_snet_image_generation.Text.prototype.getNImages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setNImages = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 steps = 8;
 * @return {number}
 */
image_generation_snet_image_generation.Text.prototype.getSteps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setSteps = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 H = 9;
 * @return {number}
 */
image_generation_snet_image_generation.Text.prototype.getH = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setH = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 W = 10;
 * @return {number}
 */
image_generation_snet_image_generation.Text.prototype.getW = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setW = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string prompt_style = 11;
 * @return {string}
 */
image_generation_snet_image_generation.Text.prototype.getPromptStyle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!image_generation_snet_image_generation.Text} returns this
 */
image_generation_snet_image_generation.Text.prototype.setPromptStyle = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
image_generation_snet_image_generation.Image.prototype.toObject = function(opt_includeInstance) {
  return image_generation_snet_image_generation.Image.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!image_generation_snet_image_generation.Image} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
image_generation_snet_image_generation.Image.toObject = function(includeInstance, msg) {
  var f, obj = {
    image1: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!image_generation_snet_image_generation.Image}
 */
image_generation_snet_image_generation.Image.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new image_generation_snet_image_generation.Image;
  return image_generation_snet_image_generation.Image.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!image_generation_snet_image_generation.Image} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!image_generation_snet_image_generation.Image}
 */
image_generation_snet_image_generation.Image.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage1(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
image_generation_snet_image_generation.Image.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  image_generation_snet_image_generation.Image.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!image_generation_snet_image_generation.Image} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
image_generation_snet_image_generation.Image.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getImage1();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string image1 = 1;
 * @return {string}
 */
image_generation_snet_image_generation.Image.prototype.getImage1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!image_generation_snet_image_generation.Image} returns this
 */
image_generation_snet_image_generation.Image.prototype.setImage1 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


goog.object.extend(exports, image_generation_snet_image_generation);
